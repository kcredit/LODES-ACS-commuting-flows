cabs <- tribble(
~ WS, ~ prior, ~ likelihood,
"win",      0.025,        0.8,
"lose",     0.975,        0.2
)
#Load libraries
packages.wanted <- c("tibble", "mlbench","rstanarm","bayestestR","bayesplot","broom","insight","finalfit","leafgl","mapview","data.table","s2","sf","r5r","lfe", "tidymodels", "haven", "lmtest", "sandwich", "performance", "forcats", "miceadds","MatchIt", "conflicted","geojsonsf","units","GGally","MASS","robustbase","RColorBrewer","rgdal","ggplot2","Hmisc","plyr","dplyr","purrr","foreign","stargazer","tidyr","tidyverse")
# install.packages("rstanarm")
install.packages("tibble")
install.packages("tibble")
# for (package in packages.wanted) install.packages(package,character.only=TRUE)
for (package in packages.wanted) require(package,character.only=TRUE)
conflict_prefer("fitted", "stats")
conflict_prefer("select", "dplyr")
conflict_prefer("filter", "dplyr")
conflict_prefer("summarize", "dplyr")
conflict_prefer("count", "dplyr")
conflict_prefer("mutate", "dplyr")
conflict_prefer("arrange", "dplyr")
conflict_prefer("lag", "dplyr")
cabs <- tribble(
~ WS, ~ prior, ~ likelihood,
"win",      0.025,        0.8,
"lose",     0.975,        0.2
)
cabs %>%
mutate(
marginal = sum(likelihood * prior),
posterior = likelihood * prior / marginal
)
cabs <- tribble(
~ WS, ~ prior, ~ likelihood,
"win",      0.025,        0.5,
"lose",     0.975,        0.5
)
cabs %>%
mutate(
marginal = sum(likelihood * prior),
posterior = likelihood * prior / marginal
)
cabs <- tribble(
~ WS, ~ prior, ~ likelihood,
"win",      0.025,        0.8,
"lose",     0.975,        0.2
)
cabs %>%
mutate(
marginal = sum(likelihood * prior),
posterior = likelihood * prior / marginal
)
cabs <- tribble(
~ WS, ~ prior, ~ likelihood,
"win",      0.025,        0.1,
"lose",     0.975,        0.9
)
cabs %>%
mutate(
marginal = sum(likelihood * prior),
posterior = likelihood * prior / marginal
)
1/50
1/30
cabs <- tribble(
~ WS, ~ prior, ~ likelihood,
"win",      0.02,        0.333,
"lose",     0.98,        0.667
)
cabs %>%
mutate(
marginal = sum(likelihood * prior),
posterior = likelihood * prior / marginal
)
1/30
1-0.0333
cabs <- tribble(
~ WS, ~ prior, ~ likelihood,
"win",      0.02,        0.0333,
"lose",     0.98,        0.9667
)
cabs %>%
mutate(
marginal = sum(likelihood * prior),
posterior = likelihood * prior / marginal
)
cabs <- tribble(
~ WS, ~ prior, ~ likelihood,
"win",      0.02,        0.1,
"lose",     0.98,        0.9
)
cabs %>%
mutate(
marginal = sum(likelihood * prior),
posterior = likelihood * prior / marginal
)
cabs <- tribble(
~ WS, ~ prior, ~ likelihood,
"win",      0.02,        0.9,
"lose",     0.98,        0.1
)
cabs %>%
mutate(
marginal = sum(likelihood * prior),
posterior = likelihood * prior / marginal
)
cabs <- tribble(
~ WS, ~ prior, ~ likelihood,
"win",      0.02,        0.6,
"lose",     0.98,        0.4
)
cabs %>%
mutate(
marginal = sum(likelihood * prior),
posterior = likelihood * prior / marginal
)
#Load libraries
packages.wanted <- c("lfe", "tidymodels", "haven", "lmtest", "sandwich", "performance", "forcats", "miceadds", "finalfit", "MatchIt", "conflicted","geojsonsf","units","sf","GGally","MASS","robustbase","RColorBrewer","rgdal","ggplot2","Hmisc","plyr","dplyr","purrr","foreign","stargazer","tidyr","tidyverse")
#install.packages("tidyverse")
#install.packages("sf")
#install.packages("units")
#install.packages("MatchIt")
#for (package in packages.wanted) update.packages(package,character.only=TRUE)
for (package in packages.wanted) require(package,character.only=TRUE)
conflict_prefer("fitted", "stats")
conflict_prefer("select", "dplyr")
conflict_prefer("filter", "dplyr")
conflict_prefer("summarize", "dplyr")
conflict_prefer("count", "dplyr")
conflict_prefer("mutate", "dplyr")
conflict_prefer("arrange", "dplyr")
conflict_prefer("lag", "dplyr")
setwd("~/Dropbox/Research Projects/Alcohol and Entrepreneurship")
longdata1 <- read.csv("third.places_panel.csv")
# panel <- read.csv("PANEL.csv")
#
# panel$INDEX <- as.character(paste(panel$X,panel$Y,sep=" "))
#
# panel_wide = panel %>%
#   spread(year, WORK) %>%
#   select(3:4,7:16)
#
# panel_wide <- plyr::rename(panel_wide, c(`2009` = "work09", `2010` = "work10", `2011` = "work11",
#                                          `2012` = "work12", `2013` = "work13", `2014` = "work14",
#                                          `2015` = "work15", `2016` = "work16", `2017` = "work17",
#                                          `2018` = "work18"))
#
# panel_wide2 = panel %>%
#   spread(year, LIVE) %>%
#   select(3:4,7:16)
#
# panel_wide2 <- plyr::rename(panel_wide2, c(`2009` = "live09", `2010` = "live10", `2011` = "live11",
#                                          `2012` = "live12", `2013` = "live13", `2014` = "live14",
#                                          `2015` = "live15", `2016` = "live16", `2017` = "live17",
#                                          `2018` = "live18"))
#
# panel_merge <- merge(panel_wide, panel, by="INDEX", all.x=T)
#
#
# write.csv(panel_wide,"panel_wide_work.csv")
# write.csv(panel_wide2,"panel_wide_live.csv")
# widedata <- read.csv("Third Places_Access_Panel_Breakpoints.csv")
widedata <- read.csv("Third Places_Access_Panel_Breakpoints2.csv")
##Use tidyr to go from "wide" to "long" format
# The arguments to gather():
# - data: Data object
# - key: Name of new key column (made from names of data columns)
# - value: Name of new value column
# - ...: Names of source columns that contain values
# - factor_key: Treat the new key column as a factor (instead of character vector)
r_long1 <- widedata %>%
gather(Year, WORK, "work09_min", "work10_min", "work11_min", "work12_min", "work13_min", "work14_min", "work15_min", "work16_min", "work17_min", "work18_min") %>%
select(ID, Year, WORK, TREAT14)
# select(GEOID10, Year, CO2C, TRANSYR, DIMP, CL, NAME, NAME2, subclass) # no subclass for division models
# write.csv(r_long1, "r_long1.csv")
r_long_work<- read.csv("r_long_work14.csv")
# #
# r_long_live<- read.csv("r_long_live14.csv")
# r_long1 <- widedata %>%
#   gather(Year, LIVE, "live09_min", "live10_min", "live11_min", "live12_min", "live13_min", "live14_min", "live15_min", "live16_min", "live17_min", "live18_min") %>%
#   select(ID, Year, LIVE, TREAT14)
r_long3 <- widedata %>%
gather(YearP, ACCESS, "LGT25_09", "LGT25_10", "LGT25_11", "LGT25_12", "LGT25_13", "LGT25_14", "LGT25_15", "LGT25_16", "LGT25_17", "LGT25_18") %>%
select(ID, YearP, ACCESS)
#Create a "year" column
r_long1$Year <- substr(r_long1$Year, 5, 6)
r_long3$Year <- substr(r_long3$YearP, 7, 8)
r_long1$ID2 <- as.character(paste(r_long1$ID, r_long1$Year, sep = "_", collapse = NULL))
r_long3$ID2 <- as.character(paste(r_long3$ID, r_long3$Year, sep = "_", collapse = NULL))
r_long3  <- r_long3  %>%
select(ID2, ACCESS)
r_long1 <- merge(r_long1,r_long3,by="ID2")
# r_long1 <- subset(r_long1, r_long1$DUMDUM==1)
r_long1$POST <- ifelse(r_long1$Year>=14,1,0)
r_long1$POST[is.na(r_long1$POST)] <- 0
#Convert factor variables to numbers
r_long1$Year <- as.numeric(as.character(r_long1$Year))
r_long1$WORK <- as.numeric(as.character(r_long1$WORK))
r_long1$ACCESS <- as.numeric(as.character(r_long1$ACCESS))
r_long1$DIMP <- as.factor(r_long1$TREAT14)
r_long1$POST <- as.factor(r_long1$POST)
r_long1$Year2 <- as.factor(r_long1$Year)
hist(r_long1$WORK)
hist(r_long1$ACCESS)
# r_long1$WORK <- log10(r_long1$WORK)
data2 <- r_long1
leads <- r_long_work
leads$Year <- substr(leads$Year, 5, 6)
leads$ID2 <- as.character(paste(leads$ID, leads$Year, sep = "_", collapse = NULL))
data2 <- merge(data2, leads, by="ID2", all.x=TRUE)
data2[is.na(data2)] <- 0
labels <- c("5 Years\nprior", "4 Years\nprior", "3 Years\nprior", "2 Years\nprior", "Year of\nexposure", "1 Year\nafter", "2 Years\nafter", "3 Years\nafter", "4 Years\nafter")
admico_list <- c("KM_5", "KM_4", "KM_3", "KM_2", "KM0", "KM1", "KM2", "KM3", "KM4")
data2 <- data2 %>%
select(ID.x, Year.x, WORK.x, ACCESS, POST, DIMP, all_of(admico_list)) %>%
mutate(
trend = Year.x - 08,
state = as.factor(ID.x),
year = as.factor(Year.x)
)
# data2$KM_4 <- data2$KM_6 + data2$KM_5 + data2$KM_4
# data2$KM4 <- data2$KM4 + data2$KM5 + data2$KM6 + data2$KM7 + data2$KM8
res <- felm(WORK.x ~ ACCESS + KM_5 + KM_4 + KM_3 + KM_2 +
KM0 + KM1 + KM2 + KM3 + KM4  | state + year | 0 | state, data = data2)
summary(res)
res2 <- felm(WORK.x ~ ACCESS POST*DIMP  | state + year | 0 | state, data = data2)
summary(res2)
res2 <- felm(WORK.x ~ ACCESS + POST*DIMP  | state + year | 0 | state, data = data2)
summary(res2)
res2 <- lm(WORK.x ~ ACCESS + POST*DIMP, data = data2)
summary(res2)
setwd("~/Documents/GitHub/LODES-ACS-commuting-flows/LODES-ACS-commuting-flows/Data")
